import sys
import requests
from colorama import init
from tqdm import tqdm
init()
status_codes = {100:"\033[1;32;40mContinue \033[1;37;40m",200:"\033[1;32;40mCan Resolve Host \033[1;37;40m",101:"Switching Protocols",102:"Processing (WebDAV"
        ,203:"Non-Authoritative Information",201:"Created",202:"\033[1;32;40mAccepted\033[1;37;40m",204:"\033[1;31;40mNo Content\033[1;37;40m",
        205:"\x1b[1;32;40mReset Content\033[1;37;40m",206:"\033[1;32;40mPartial Content\033[1;37;40m",207:"Multi-Status (WebDAV)",
        208:"\x1b[1;32;40mAlready Reported (WebDAV\033[1;37;40m)",226:"IM Used",300:"\x1b[1;32;40mMultiple Choices\033[1;37;40m",
        301:"\x1b[1;32;40mMoved Permanently\033[1;37;40m",302:"\x1b[1;32;40mFound\033[1;37;40m",303:"\x1b[1;32;40mSee Other\033[1;37;40m",304:"\x1b[1;32;40mNot Modified\033[1;37;40m",
        305:"\x1b[1;32;40mUse Proxy\033[1;37;40m",307:"\x1b[1;32;40mTemporary Redirect",308:"\x1b[1;32;40mPermanent Redirect (experimental)",
        400:"\033[1;31;40mBad Request\033[1;37;40m",401:"\033[1;31;40mUnauthorized",402:"Payment Required",403:"\033[1;31;40mForbidden",
        404:"\033[1;31;40mNot Found\033[1;37;40m",405:"\033[1;31;40mMethod Not Allowed",406:"\033[1;31;40mNot Acceptable",407:"\033[1;31;40mProxy Authentication Required",
        408:"\033[1;31;40mRequest Timeout\033[1;37;40m",409:"\033[1;31;40mConflict",410:"\033[1;31;40mGone",411:"\033[1;31;40mLength Required",412:"\033[1;31;40mPrecondition Failed",
        413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",
        416:"Requested Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot (RFC 2324",
        420:"\033[1;31;40mEnhance Your Calm (Twitter)\033[1;37;40m",422:"Unprocessable Entity (WebDAV)",423:"\033[1;31;40mLocked (WebDAV)\033[1;37;40m",
        424:"\033[1;31;40mFailed Dependency (WebDAV)\033[1;37;40m",425:"Reserved for WebDAV",426:"Upgrade Required",
        428:"\033[1;31;40mPrecondition Required\033[1;37;40m",429:"\033[1;31;40mToo Many Requests\033[1;37;40m",431:"\033[1;31;40mRequest Header Fields Too Large",
        444:"\033[1;31;40mNo Response (Nginx)\033[1;37;40m",449:"\033[1;31;40mRetry With (Microsoft)",
        450:"BLocked by Windows Parental Controls (Windows)",451:"Unavailable For Legal Reasons",
        499:"\033[1;31;40mClient Closed Request (Nginx)\033[1;37;40m",500:"Internal Server Error",501:"Not Implemented",
        502:"\033[1;31;40mBad Gateway\033[1;37;40m",503:"Service Unavailable",504:"Gatewat Timeout",505:"HTTP Version Not Supported",
        506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected (WebDAV)",
        509:"Bandwidth Limit Exceeded (Apache)",510:"Not Extended",511:"Network AUthentication Required",
        598:"Network read timeout error",599:"Network connect timeout error"}

if len(sys.argv) == 1:
    print("Usage: python fuzzer.py http://URL PATH_TO_WORDLIST \n")
else:
    print("Usage: python fuzzer.py http://URL PATH_TO_WORDLIST \n")
    sys.argv.pop(0)
    file = sys.argv[1]
    webpage = sys.argv[0]
    with open(file, "r") as wordlist:
        word_list = []
        for index in wordlist:
            word_list.append(index.strip())
    r = requests.get(webpage)
    if r.status_code == 200:
        for index in tqdm(word_list):
            new_url = webpage + '/' + index
            page = requests.get(new_url)
            status = page.status_code
            for i in status_codes:
                if status == i:
                    if i == 404:
                        pass
                    else:
                        msg = "{} : {}".format(new_url,status_codes[i])
                        tqdm.write(msg)
    else:
        print("Could Not Resolve Host")
